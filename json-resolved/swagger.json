{
  "swagger" : "2.0",
  "info" : {
    "description" : "This is the API of the Smart Data Platform Munich in the EU project Smarter Together.If you want to access one of the APIs listed below, please get in contact with smarter-together@muenchen.de to get further information about the conditions and next steps.",
    "version" : "2.0.1",
    "title" : "Smarter Together API"
  },
  "host" : "api.smartdataplatform.info",
  "basePath" : "/",
  "security" : [ {
    "application" : [ "smarterTogether" ]
  } ],
  "paths" : {
    "/lampposts" : {
      "get" : {
        "summary" : "Server example operation",
        "description" : "",
        "parameters" : [ {
          "name" : "lat",
          "in" : "query",
          "description" : "lat ",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "lng",
          "in" : "query",
          "description" : "lng",
          "required" : false,
          "type" : "number"
        }, {
          "name" : "radius",
          "in" : "query",
          "description" : "radius",
          "required" : false,
          "type" : "number"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : { }
          },
          "204" : {
            "description" : "NO CONTENT"
          },
          "404" : {
            "description" : "NOT FOUND CONTENT"
          }
        },
        "security" : [ {
          "application" : [ "ReadLampposts" ]
        } ]
      }
    },
    "/lampposts/{lamppostId}" : {
      "get" : {
        "summary" : "Server example operation",
        "description" : "This is an example opeartion to show how security is applied to the call.",
        "parameters" : [ {
          "name" : "lamppostId",
          "in" : "path",
          "description" : "ID of Station to return data for",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/LamppostStation"
            }
          },
          "204" : {
            "description" : "NO CONTENT"
          },
          "404" : {
            "description" : "NOT FOUND CONTENT"
          }
        },
        "security" : [ {
          "application" : [ "ReadLampposts" ]
        } ]
      }
    },
    "/lampposts/{lamppostId}/connectedSensors/{connectedSensorId}/measuredValues" : {
      "get" : {
        "summary" : "Server example operation",
        "description" : "",
        "parameters" : [ {
          "name" : "lamppostId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "connectedSensorId",
          "in" : "path",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "timestampFrom",
          "in" : "query",
          "description" : "timestampFrom",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "timestampTo",
          "in" : "query",
          "description" : "timestampTo",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "interval",
          "in" : "query",
          "description" : "interval",
          "required" : false,
          "type" : "string",
          "enum" : [ "hourly", "weekly", "daily" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/LamppostStationConnectedSensorMeasuredValue"
              }
            }
          },
          "204" : {
            "description" : "NO CONTENT"
          },
          "404" : {
            "description" : "NOT FOUND CONTENT"
          }
        },
        "security" : [ {
          "application" : [ "ReadLamppostMeasurements" ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "application" : {
      "type" : "oauth2",
      "tokenUrl" : "https://sso2.vmz.services/auth/realms/SmarterTogether/protocol/openid-connect/token",
      "flow" : "application",
      "scopes" : {
        "ReadLampposts" : "read lampposts ",
        "smarterTogether" : "connect to smarterTogether API",
        "ReadLamppostMeasurements" : "read lamppost Measurements"
      }
    }
  },
  "definitions" : {
    "LamppostStation" : {
      "type" : "object",
      "required" : [ "id", "location" ],
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "location" : {
          "$ref" : "#/definitions/PointLocation"
        },
        "name" : {
          "type" : "string"
        },
        "connectedSensors" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/LamppostStationConnectedSensor"
          }
        },
        "properties" : {
          "$ref" : "#/definitions/LamppostStationConnectedSensorProperties"
        }
      },
      "example" : {
        "name" : "name",
        "location" : {
          "coordinates" : "{}",
          "type" : "Point"
        },
        "id" : "id",
        "connectedSensors" : [ {
          "connectedSensorId" : "connectedSensorId",
          "properties" : {
            "fixture" : "fixture",
            "wifi" : true,
            "provider" : "provider",
            "measurementTypes" : [ "measurementTypes", "measurementTypes" ],
            "type" : "type"
          }
        }, {
          "connectedSensorId" : "connectedSensorId",
          "properties" : {
            "fixture" : "fixture",
            "wifi" : true,
            "provider" : "provider",
            "measurementTypes" : [ "measurementTypes", "measurementTypes" ],
            "type" : "type"
          }
        } ],
        "properties" : {
          "fixture" : "fixture",
          "wifi" : true,
          "provider" : "provider",
          "measurementTypes" : [ "measurementTypes", "measurementTypes" ],
          "type" : "type"
        }
      }
    },
    "PointLocation" : {
      "type" : "object",
      "required" : [ "coordinates", "type" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "enum" : [ "Point" ]
        },
        "coordinates" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "example" : {
        "coordinates" : "{}",
        "type" : "Point"
      }
    },
    "LamppostStationConnectedSensor" : {
      "type" : "object",
      "required" : [ "connectedSensorId" ],
      "properties" : {
        "connectedSensorId" : {
          "type" : "string"
        },
        "properties" : {
          "$ref" : "#/definitions/LamppostStationConnectedSensorProperties"
        }
      },
      "example" : {
        "connectedSensorId" : "connectedSensorId",
        "properties" : {
          "fixture" : "fixture",
          "wifi" : true,
          "provider" : "provider",
          "measurementTypes" : [ "measurementTypes", "measurementTypes" ],
          "type" : "type"
        }
      }
    },
    "LamppostStationConnectedSensorProperties" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string"
        },
        "provider" : {
          "type" : "string"
        },
        "fixture" : {
          "type" : "string"
        },
        "measurementTypes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wifi" : {
          "type" : "boolean"
        }
      },
      "example" : {
        "fixture" : "fixture",
        "wifi" : true,
        "provider" : "provider",
        "measurementTypes" : [ "measurementTypes", "measurementTypes" ],
        "type" : "type"
      }
    },
    "LamppostStationConnectedSensorMeasuredValue" : {
      "type" : "object",
      "required" : [ "lammpostId", "timestamp" ],
      "properties" : {
        "lammpostId" : {
          "type" : "string"
        },
        "temperature" : {
          "type" : "number"
        },
        "relativeHumidity" : {
          "type" : "number"
        },
        "timestamp" : {
          "type" : "string"
        },
        "rainIntensity" : {
          "type" : "number"
        },
        "airPressure" : {
          "type" : "number"
        },
        "windSpeed" : {
          "type" : "number"
        },
        "windDirection" : {
          "type" : "number"
        },
        "pm25" : {
          "type" : "number"
        },
        "pm10" : {
          "type" : "number"
        },
        "no2" : {
          "type" : "number"
        },
        "so2" : {
          "type" : "number"
        },
        "co" : {
          "type" : "number"
        },
        "ozone" : {
          "type" : "number"
        },
        "interval" : {
          "type" : "string",
          "enum" : [ "hourly", "monthly", "dayly" ]
        }
      },
      "example" : {
        "rainIntensity" : 1.46581298050294517310021547018550336360931396484375,
        "airPressure" : 5.962133916683182377482808078639209270477294921875,
        "pm10" : 9.301444243932575517419536481611430644989013671875,
        "co" : 4.1456080298839363962315474054776132106781005859375,
        "ozone" : 7.3862819483858839220147274318151175975799560546875,
        "no2" : 3.61607674925191080461672754609026014804840087890625,
        "lammpostId" : "lammpostId",
        "pm25" : 7.061401241503109105224211816675961017608642578125,
        "so2" : 2.027123023002321833274663731572218239307403564453125,
        "temperature" : 0.80082819046101150206595775671303272247314453125,
        "relativeHumidity" : 6.02745618307040320615897144307382404804229736328125,
        "interval" : "hourly",
        "windDirection" : 2.3021358869347654518833223846741020679473876953125,
        "windSpeed" : 5.63737665663332876420099637471139430999755859375,
        "timestamp" : "timestamp"
      }
    }
  }
}